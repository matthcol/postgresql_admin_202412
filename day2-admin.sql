-- DAY 2 --
-- start in db dbmovie --
SELECT * FROM pg_collation;
SELECT * FROM pg_collation where collname like 'fr-FR%';

CREATE DATABASE dbcity
    WITH
    OWNER = postgres
    -- TEMPLATE = template1 -- default
	TEMPLATE = template0 -- to enable collation provider ICU
    ENCODING = 'UTF8'
    ICU_LOCALE = 'fr-FR'
    LOCALE_PROVIDER = 'icu'
;

-- go to db dbcity --
DROP TABLE city;

CREATE TABLE city
(
	-- columns
    id integer,
    name character varying(50) NOT NULL,
    zipcode char(5),
	-- table constraints
    CONSTRAINT pk_city PRIMARY KEY (id)
);

insert into city values (1, 'Toulouse', '31000');
insert into city values (1, 'Toulouse', '31100');
-- ERROR:  Key (id)=(1) already exists.duplicate key value violates unique constraint "pk_city" 

-- recreate table with id generated with clause identity (mode always)
DROP TABLE city;
CREATE TABLE city
(
	-- columns
    id integer GENERATED ALWAYS AS IDENTITY, -- create sequence city_id_seq
    name character varying(50) NOT NULL,
    zipcode char(5),
	-- table constraints
    CONSTRAINT pk_city PRIMARY KEY (id)
);

insert into city (name, zipcode) values ('Toulouse', '31000');
insert into city (name, zipcode) values ('Toulouse', '31100');
select * from city;

insert into city (id, name, zipcode) values (3, 'Toulouse', '31200');
-- ERROR:  Column "id" is an identity column defined as GENERATED ALWAYS.cannot insert a non-DEFAULT value into column "id" 

insert into city (id, name, zipcode) values (DEFAULT, 'Toulouse', '31200');

-- recreate table with id generated with clause identity (mode default)
DROP TABLE city; -- drop also sequence city_id_seq
CREATE TABLE city
(
	-- columns
    id integer GENERATED BY DEFAULT AS IDENTITY, -- create sequence city_id_seq
    name character varying(50) NOT NULL,
    zipcode char(5),
	-- table constraints
    CONSTRAINT pk_city PRIMARY KEY (id)
);
insert into city (name, zipcode) values ('Toulouse', '31000');
insert into city (name, zipcode) values ('Toulouse', '31100');
select * from city;
-- force id
insert into city (id, name, zipcode) values (3, 'Toulouse', '31200');
select * from city;
insert into city (id, name, zipcode) values (DEFAULT, 'Toulouse', '31300'); -- call nextval('city_id_seq') => 3


-- sequence operations
select currval('city_id_seq'); -- 3 (NB! only available, if generated in this session)
select nextval('city_id_seq'); -- execute n times: 4, 5, 6, 7, ..., 18

-- in an // session: 2 x nextval/currval

select currval('city_id_seq'); -- keep 18
select nextval('city_id_seq'); -- 21
select currval('city_id_seq'); -- 21

select setval('city_id_seq', 100);
select nextval('city_id_seq'); -- 101
-- in the // session: nextval => 102

-- in restricted mode
select setval('city_id_seq', max(id)) from city;
-- open all connections again
insert into city (name, zipcode) values ('Belfort', '90000');
insert into city (name, zipcode) values ('Bonneuil-sur-Marne', '94380');
select * from city; -- new ids: 4,5

-- wrong data
insert into city (id, name, zipcode) values (3000, 'Toulouse', '31200');
delete from city where id = 3000;


-- RECAP langage SQL
-- * DDL: Data Definition Language => objects of a database (database, schema, table, view, constraint, sequence, index, ...)
--     - CREATE
--     - ALTER
--     - DROP
-- * DML: Data Manipulation Language
--     - INSERT : add data
--     - DELETE : delete data (row(s) not the table !)
--     - UPDATE : modify data
--     - SELECT : read data
-- * Transactions: COMMIT, ROLLBACK, BEGIN
-- * Privileges: GRANT, REVOKE











-- generate key with identity (alt. serial)
-- proposed by SQL standard (also mssql, oracle, ...)

-- indexes --